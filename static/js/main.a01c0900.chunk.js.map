{"version":3,"sources":["helpers/LINKS.js","global.styles.js","components/header/header.styles.js","components/header/header.component.jsx","components/spinner/spinner.styles.js","components/spinner/spinner.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["HOME","process","ESCENA","CATAPULTA","GlobalStyle","createGlobalStyle","Container","styled","header","Logo","img","LogoUN","Link","ul","li","LinkParent","Header","to","src","spinnerFullHeight","css","SpinnerOverlay","div","height","SpinnerContainer","Spinner","HomePage","lazy","ScenePage","CatapultPage","App","fallback","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mJAAA,0GAAMA,EAAI,UAAMC,gCAAN,KACJC,EAAM,UAAMD,gCAAN,WACNE,EAAS,UAAMF,gCAAN,e,6HCAFG,EAAcC,YAAH,qqCCCXC,EAAYC,IAAOC,OAAV,mKAQTC,EAAOF,IAAOG,IAAV,qFAMJC,EAASJ,YAAOE,EAAPF,CAAH,sIAqBNK,GAbQL,IAAOM,GAAV,iKASGN,IAAOO,GAAV,iDAIEP,YAAOQ,IAAPR,CAAH,kK,eCnCF,SAASS,IACtB,OACE,eAACV,EAAD,WACE,cAACM,EAAD,CAAMK,GAAIjB,IAAV,SACE,cAACS,EAAD,CAAMS,IAAI,mBAEZ,cAACP,EAAD,CAAQO,IAAI,wBCPlB,IAAMC,EAAoBC,YAAH,gFAIVC,EAAiBd,IAAOe,IAAV,4HAMvB,gBAAGC,EAAH,EAAGA,OAAH,OAAiBA,EAAM,kBAAcA,GAAWJ,KAGvCK,EAAmBjB,IAAOe,IAAV,ucCLdG,EANC,kBACd,cAACJ,EAAD,UACE,cAACG,EAAD,OCGEE,EAAWC,gBAAK,kBAAM,gCACtBC,EAAYD,gBAAK,kBAAM,sDACvBE,EAAeF,gBAAK,kBAAM,sDAkBjBG,MAhBf,WACE,OACE,qCACE,cAAC1B,EAAD,IACA,cAACY,EAAD,IACA,cAAC,IAAD,UACE,eAAC,WAAD,CAAUe,SAAUN,EAApB,UACE,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAMjC,IAAMkC,UAAWR,IACpC,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAM9B,IAAW+B,UAAWL,IACzC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAM/B,IAAQgC,UAAWN,aCVjCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a01c0900.chunk.js","sourcesContent":["const HOME = `${process.env.PUBLIC_URL}/`;\nconst ESCENA = `${process.env.PUBLIC_URL}/escena`;\nconst CATAPULTA = `${process.env.PUBLIC_URL}/catapulta`;\n\nexport { HOME, ESCENA, CATAPULTA };\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\n  :root {\n    /* COLORS */\n    --primary: hsla(248, 96%, 12%, 1);\n    --secondary: hsla(248, 89%, 52%, 1);\n    --secondary2: hsla(248, 94%, 7%, 1);\n    --accent: hsla(315, 87%, 58%, 1);\n    --accent2: hsla(270, 85%, 64%, 1);\n    /* Gray Scale */\n    --black: rgba(0,0,0,.8);\n    --gray1: rgba(51,51,51,1);\n    --gray2: rgba(105,105,105,1);\n    --gray3: rgba(153,153,153,1);\n    --gray4: rgba(204,204,204,1);\n    --white: rgba(255,255,255, 1);\n    /* FONTS */\n    --font-family: 'Roboto', sans-serif;\n    --font-size-desktop: calc(1vmin + 1vmax);\n    --font-size-mobile: calc(3vmin + 1vmax);\n    --font-size1: 1rem;\n    --font-size2: 1.25rem;\n    --font-size3: 1.563rem;\n    --font-size4: 1.953rem;\n    --font-size5: 2.441rem;\n    /* SIZES */\n    --header-footer-size: 75px;\n  }\n\n  body {\n    background-color: var(--secondary2);\n    font-family: var(--font-family);\n    font-size: var(--font-size-mobile);\n    margin: 0;\n    color: var(--white);\n    @media screen and (min-width: 768px) {\n      font-size: var(--font-size-desktop);\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { Link as LinkParent } from 'react-router-dom';\n\nexport const Container = styled.header`\n  height: var(--header-footer-size);\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  overflow: hidden;\n`;\n\nexport const Logo = styled.img`\n  object-fit: contain;\n  height: 65px;\n  width: auto;\n`;\n\nexport const LogoUN = styled(Logo)`\n  padding: 0;\n  width: 65px;\n  height: 65px;\n  background-color: var(--white);\n  border-radius: 50%;\n`;\n\nexport const NavUl = styled.ul`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  justify-content: flex-end;\n  padding: var(--font-size3);\n  width: 100%;\n`;\n\nexport const NavLi = styled.li`\n  list-style: none;\n`;\n\nexport const Link = styled(LinkParent)`\n  color: var(--accent);\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  height: 70px;\n  width: fit-content;\n`;\n","import { Container, Logo, LogoUN, NavUl, NavLi, Link } from './header.styles';\nimport { HOME, ESCENA, CATAPULTA } from '../../helpers/LINKS';\n\nexport default function Header() {\n  return (\n    <Container>\n      <Link to={HOME}>\n        <Logo src=\"img/logo.png\" />\n      </Link>\n      <LogoUN src=\"img/logoUnal.png\" />\n      {/* <NavUl>\n        <NavLi>\n          <Link to={CATAPULTA}>Catapulta</Link>\n        </NavLi>\n        <NavLi>\n          <Link to={ESCENA}>Escena</Link>\n        </NavLi>\n      </NavUl> */}\n    </Container>\n  );\n}\n","import styled, { css } from 'styled-components';\n\nconst spinnerFullHeight = css`\n  height: calc(100vh - var(--header-footer-size));\n`;\n\nexport const SpinnerOverlay = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ${({ height }) => (height ? `height: ${height}` : spinnerFullHeight)};\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 70px;\n  height: 70px;\n  border: 5px solid var(--gray1);\n  border-radius: 50%;\n  border-top-color: var(--accent);\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { SpinnerOverlay, SpinnerContainer } from './spinner.styles';\n\nconst Spinner = () => (\n  <SpinnerOverlay>\n    <SpinnerContainer />\n  </SpinnerOverlay>\n);\n\nexport default Spinner;\n","import { lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { GlobalStyle } from './global.styles';\n\nimport Header from './components/header';\nimport Spinner from './components/spinner';\n\nimport { HOME, ESCENA, CATAPULTA } from './helpers/LINKS';\n\nconst HomePage = lazy(() => import('./pages/homePage'));\nconst ScenePage = lazy(() => import('./pages/scenePage'));\nconst CatapultPage = lazy(() => import('./pages/catapultPage'));\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      <Switch>\n        <Suspense fallback={Spinner}>\n          <Route exact path={HOME} component={HomePage} />\n          <Route exact path={CATAPULTA} component={CatapultPage} />\n          <Route exact path={ESCENA} component={ScenePage} />\n        </Suspense>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}